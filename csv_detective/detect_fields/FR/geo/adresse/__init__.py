from csv_detective.process_text import _process_text

PROPORTION = 0.55
# ajouts d'espaces en fin de mots pour s'assurer que le str n'est pas juste une substr d'un mot plus long
voies = {
    'aire ',
    'allee ',
    'avenue ',
    'base ',
    'boulevard ',
    'cami ',
    'carrefour ',
    'chemin ',
    'cheminement ',
    'chaussee ',
    'cite ',
    'clos ',
    'coin ',
    'corniche ',
    'cote ',
    'cour ',
    'cours ',
    'domaine ',
    'descente ',
    'ecart ',
    'esplanade ',
    'faubourg ',
    'gare ',
    'grande rue',
    'hameau ',
    'halle ',
    'ilot ',
    'impasse ',
    'lieu dit',
    'lotissement ',
    'marche ',
    'montee ',
    'parc ',
    'passage ',
    'place ',
    'plan ',
    'plaine ',
    'plateau ',
    'pont ',
    'port ',
    'promenade ',
    'parvis ',
    'quartier ',
    'quai ',
    'residence ',
    'ruelle ',
    'rocade ',
    'rond point',
    'route ',
    'rue ',
    # 'sente - sentier',
    'square ',
    'tour ',
    # 'terre-plein',
    'traverse ',
    'villa ',
    'village ',
    'voie ',
    'zone artisanale',
    'zone d’amenagement concerte',
    'zone d’amenagement differe',
    'zone industrielle',
    'zone ',
    # 'r',
    'av ',
    'pl ',
    'bd ',
    'cami ',
    # 'che',
    'chs ',
    'dom ',
    'ham ',
    'ld ',
    # 'pro',
    # 'rte',
    'vlge ',
    'za ',
    'zac ',
    'zad ',
    'zi ',
    # 'car',
    'fg ',
    # 'lot',
    'imp ',
    # 'qu',
    'mte'
}


def _is(val):
    '''Repere des adresses'''
    if len(val) > 150:
        return False
    val = _process_text(val)
    return any(x in val for x in voies)
